#!wing
#!version=7.0
##################################################################
# Wing project file : User-specific branch                       #
##################################################################
[user attributes]
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'CMmCxdJ5YRL0JbNGnf8fuFvIlE'\
        'CaGRcB',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.2599164926931107,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': ()}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../../../../Anaconda3/Lib/json/decoder.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../Anaconda3/Lib/json/decoder.py'),
                      'BACKSLASH')]},
        loc('../../../../../Anaconda3/Lib/json/encoder.py'): {'expanded-node'\
        's': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../Anaconda3/Lib/json/encoder.py'),
                      'encode_basestring')]},
        loc('../../../../../Anaconda3/Lib/logging/__init__.py'): {'expanded-'\
        'nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../../Anaconda3/Lib/logging/__init__.py'),
                      'addLevelName')]},
        loc('../../../../../Anaconda3/Lib/site-packages/ecdsa/keys.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../Anaconda3/Lib/site-packages/ecdsa/keys.py'),
                      'BadDigestError')]},
        loc('../../../../../Anaconda3/Lib/site-packages/parameterized/parameterized.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../Anaconda3/Lib/site-packages/parameterized/parameterized.py'),
                      'bytes_type')]},
        loc('../../../../../Anaconda3/Lib/site-packages/pytz/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../Anaconda3/Lib/site-packages/pytz/__init__.py'),
                      'all_timezones')]},
        loc('../../../../../Anaconda3/Lib/site-packages/steem/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../Anaconda3/Lib/site-packages/steem/account.py'),
                      '')]},
        loc('../../../../../Anaconda3/Lib/site-packages/steem/aes.py'): {'ex'\
        'panded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../Anaconda3/Lib/site-packages/steem/aes.py'),
                      'AESCipher')]},
        loc('../../../../../Anaconda3/Lib/sre_parse.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../Anaconda3/Lib/sre_parse.py'),
                      'ASCIILETTERS')]},
        loc('../../../../../Anaconda3/Lib/ssl.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../../Anaconda3/Lib/ssl.py'),
                      'CertificateError')]},
        loc('../../../../../Anaconda3/Lib/unittest/case.py'): {'expanded-nod'\
        'es': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../../Anaconda3/Lib/unittest/case.py'),
                      'DIFF_OMITTED')]},
        loc('../../../AppData/Roaming/Python/Python36/site-packages/websocket_client-0.46.0-py3.6.egg/websocket/_abnf.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../AppData/Roaming/Python/Python36/site-packages/websocket_client-0.46.0-py3.6.egg/websocket/_abnf.py'),
                      'ABNF')]},
        loc('../../../AppData/Roaming/Python/Python36/site-packages/websocket_client-0.46.0-py3.6.egg/websocket/_core.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../AppData/Roaming/Python/Python36/site-packages/websocket_client-0.46.0-py3.6.egg/websocket/_core.py'),
                      'create_connection')]},
        loc('../../../AppData/Roaming/Python/Python36/site-packages/websocket_client-0.46.0-py3.6.egg/websocket/_socket.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../AppData/Roaming/Python/Python36/site-packages/websocket_client-0.46.0-py3.6.egg/websocket/_socket.py'),
                      'DEFAULT_SOCKET_OPTION')]},
        loc('../../../AppData/Roaming/Python/Python36/site-packages/websocket_client-0.46.0-py3.6.egg/websocket/_utils.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../AppData/Roaming/Python/Python36/site-packages/websocket_client-0.46.0-py3.6.egg/websocket/_utils.py'),
                      'extract_err_message')]},
        loc('../beem/.circleci/config.yml'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../beem/beembase/account.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../beem/beembase/account.py'),
                      'Address')]},
        loc('../beem/beembase/bip38.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../beem/beembase/bip38.py'),
                      'decrypt')]},
        loc('../beem/beembase/chains.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/beembase/chains.py'),
                      'known_chains')]},
        loc('../beem/beemgrapheneapi/graphenerpc.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../beem/beemgrapheneapi/graphenerpc.py'),
                      'GrapheneRPC')]},
        loc('../beem/beemgrapheneapi/rpcutils.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../beem/beemgrapheneapi/rpcutils.py'),
                      'get_api_name')]},
        loc('../beem/beemgrapheneapi/utils.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../beem/beemgrapheneapi/utils.py'),
                      'get_api_name')]},
        loc('../beem/beemgrapheneapi/version.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/beemgrapheneapi/version.py'),
                      'version')]},
        loc('../beem/examples/print_account_transfers.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/examples/print_account_transfers.py'),
                      'a')]},
        loc('../beem/examples/print_appbase.txt'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../beem/tests/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/tests/beembase/__init__.py'),
                      '')]},
        loc('../beem/tests/beemgraphene/test_ecdsa.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../beem/tests/beemgraphene/test_ecdsa.py'),
                      'Testcases')]},
        loc('../beem/tests/test_message.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/tests/test_message.py'),
                      'core_unit')]},
        loc('../beem/tests/test_notify.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/tests/test_notify.py'),
                      'core_unit')]},
        loc('../beem/tests/test_price.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../beem/tests/test_price.py'),
                             'Testcases')]],
        'top-node': [('generic attribute',
                      loc('../beem/tests/test_price.py'),
                      'nodes')]},
        loc('../beem/tests/test_steem.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../beem/tests/test_steem.py'),
                             'wif')]],
        'top-node': [('generic attribute',
                      loc('../beem/tests/test_steem.py'),
                      'core_unit')]},
        loc('../beem/tests/test_steemnoderpc.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/tests/test_steemnoderpc.py'),
                      'core_unit')]},
        loc('../beem/tests/test_testnet.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/tests/test_testnet.py'),
                      'core_unit')]},
        loc('../beem/tests/test_txbuffers.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/tests/test_txbuffers.py'),
                      'nodes')]},
        loc('../beem/tests/test_utils.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../beem/tests/test_utils.py'),
                      'Testcases')]},
        loc('../beem/tests/test_vote.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/tests/test_vote.py'),
                      'nodes')]},
        loc('../beem/tests/test_wallet.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/tests/test_wallet.py'),
                      'nodes')]},
        loc('../beem/tests/test_websocket.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/tests/test_websocket.py'),
                      'core_unit')]},
        loc('../beem/tests/test_witness.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/tests/test_witness.py'),
                      'nodes')]},
        loc('../beem/.coveragerc'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': None},
        loc('../beem/.travis.yml'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': None},
        loc('../beem/README.rst'): {'expanded-nodes': [],
                                    'selected-nodes': [],
                                    'top-node': None},
        loc('../beem/appveyor.yml'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': None},
        loc('../beem/beem/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/beem/account.py'),
                      '')]},
        loc('../beem/beem/account.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../beem/beem/account.py'),
                      'Account')]},
        loc('../beem/beem/aes.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('class def',
        loc('../beem/beem/aes.py'),
        'AESCipher')]},
        loc('../beem/beem/amount.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../beem/beem/amount.py'),
                      'Amount')]},
        loc('../beem/beem/asset.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('class def',
        loc('../beem/beem/asset.py'),
        'Asset')]},
        loc('../beem/beem/block.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('class def',
        loc('../beem/beem/block.py'),
        'Block')]},
        loc('../beem/beem/blockchain.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../beem/beem/blockchain.py'),
                      'Blockchain')]},
        loc('../beem/beem/blockchainobject.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../beem/beem/blockchainobject.py'),
                      'BlockchainObject')]},
        loc('../beem/beem/cli.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('function def',
        loc('../beem/beem/cli.py'),
        'addkey')]},
        loc('../beem/beem/comment.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../beem/beem/comment.py'),
                      'Comment')]},
        loc('../beem/beem/exceptions.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../beem/beem/exceptions.py'),
                      'AccountDoesNotExistsException')]},
        loc('../beem/beem/market.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../beem/beem/market.py'),
                      'Market')]},
        loc('../beem/beem/memo.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('class def',
        loc('../beem/beem/memo.py'),
        'Memo')]},
        loc('../beem/beem/message.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/beem/message.py'),
                      'log')]},
        loc('../beem/beem/notify.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/beem/notify.py'),
                      'log')]},
        loc('../beem/beem/price.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('class def',
        loc('../beem/beem/price.py'),
        'FilledOrder')]},
        loc('../beem/beem/steem.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('generic attribute',
        loc('../beem/beem/steem.py'),
        'log')]},
        loc('../beem/beem/storage.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/beem/storage.py'),
                      'configStorage')]},
        loc('../beem/beem/transactionbuilder.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/beem/transactionbuilder.py'),
                      'log')]},
        loc('../beem/beem/utils.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('function def',
        loc('../beem/beem/utils.py'),
        'assets_from_string')]},
        loc('../beem/beem/version.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/beem/version.py'),
                      'version')]},
        loc('../beem/beem/vote.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('class def',
        loc('../beem/beem/vote.py'),
        'AccountVotes')]},
        loc('../beem/beem/wallet.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/beem/wallet.py'),
                      'log')]},
        loc('../beem/beem/witness.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../beem/beem/witness.py'),
                      'ListWitnesses')]},
        loc('../beem/beemapi/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/beemapi/exceptions.py'),
                      '')]},
        loc('../beem/beemapi/exceptions.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../beem/beemapi/exceptions.py'),
                      'decodeRPCErrorMsg')]},
        loc('../beem/beemapi/steemnoderpc.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/beemapi/steemnoderpc.py'),
                      'log')]},
        loc('../beem/beemapi/websocket.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/beemapi/websocket.py'),
                      'log')]},
        loc('../beem/beembase/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/beembase/bip38.py'),
                      '')]},
        loc('../beem/beembase/memo.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../beem/beembase/memo.py'),
                      'decode_memo')]},
        loc('../beem/beembase/objects.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../beem/beembase/objects.py'),
                      'AccountId')]},
        loc('../beem/beembase/objecttypes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/beembase/objecttypes.py'),
                      'object_type')]},
        loc('../beem/beembase/operationids.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../beem/beembase/operationids.py'),
                      'getOperationNameForId')]},
        loc('../beem/beembase/operations.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../beem/beembase/operations.py'),
                      'Account_create')]},
        loc('../beem/beembase/signedtransactions.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/beembase/signedtransactions.py'),
                      'log')]},
        loc('../beem/beembase/transactions.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../beem/beemgrapheneapi/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/beemgrapheneapi/graphenerpc.py'),
                      '')]},
        loc('../beem/beemgraphenebase/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/beemgraphenebase/account.py'),
                      '')]},
        loc('../beem/beemgraphenebase/account.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../beem/beemgraphenebase/account.py'),
                      'Address')]},
        u'By Module': {'expanded-nodes': [],
                       'selected-nodes': [],
                       'top-node': None},
        loc('../beem/docs/beembase.rst'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../beem/tests/beembase/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/tests/beembase/test_bip38.py'),
                      '')]},
        loc('../beem/tests/beembase/test_bip38.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../beem/tests/beembase/test_bip38.py'),
                      'Testcases')]},
        loc('../beem/tests/beembase/test_memo.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../beem/tests/beembase/test_memo.py'),
                      'Testcases')]},
        loc('../beem/tests/beembase/test_transactions.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/tests/beembase/test_transactions.py'),
                      'default_prefix')]},
        loc('../beem/tests/beemgraphene/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/tests/beemgraphene/test_account.py'),
                      '')]},
        loc('../beem/tests/beemgraphene/test_base58.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../beem/tests/beemgraphene/test_base58.py'),
                      'Testcases')]},
        loc('../beem/tests/beemgraphene/test_bip38.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../beem/tests/beemgraphene/test_bip38.py'),
                      'Testcases')]},
        loc('../beem/tests/beemgraphene/test_py23.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../beem/tests/beemgraphene/test_py23.py'),
                      'Testcases')]},
        loc('../beem/tests/beemgraphene/test_rpcutils.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../beem/tests/beemgraphene/test_rpcutils.py'),
                      'Testcases')]},
        loc('../beem/tests/test_account.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/tests/test_account.py'),
                      'nodes')]},
        loc('../beem/tests/test_aes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../beem/tests/test_aes.py'),
                      'Testcases')]},
        loc('../beem/tests/test_amount.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/tests/test_amount.py'),
                      'nodes')]},
        loc('../beem/tests/test_asset.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/tests/test_asset.py'),
                      'nodes')]},
        loc('../beem/tests/test_block.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/tests/test_block.py'),
                      'nodes')]},
        loc('../beem/tests/test_blockchain.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/tests/test_blockchain.py'),
                      'nodes')]},
        loc('../beem/tests/test_cli.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/tests/test_cli.py'),
                      'nodes')]},
        loc('../beem/tests/test_comment.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/tests/test_comment.py'),
                      'nodes')]},
        loc('../beem/tests/test_discussions.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/tests/test_discussions.py'),
                      'nodes')]},
        loc('../beem/tests/test_market.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../beem/tests/test_market.py'),
                             'wif')]],
        'top-node': [('generic attribute',
                      loc('../beem/tests/test_market.py'),
                      'nodes')]},
        loc('../beem/beemgraphenebase/base58.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../beem/beemgraphenebase/base58.py'),
                      'b58decode')]},
        loc('../beem/beemgraphenebase/bip38.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../beem/beemgraphenebase/bip38.py'),
                      'decrypt')]},
        loc('../beem/beemgraphenebase/chains.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/beemgraphenebase/chains.py'),
                      'default_prefix')]},
        loc('../beem/beemgraphenebase/dictionary.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/beemgraphenebase/dictionary.py'),
                      'words')]},
        loc('../beem/beemgraphenebase/ecdsasig.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../beem/beemgraphenebase/ecdsasig.py'),
                      'compressedPubkey')]},
        loc('../beem/beemgraphenebase/objects.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../beem/beemgraphenebase/objects.py'),
                      'GrapheneObject')]},
        loc('../beem/beemgraphenebase/objecttypes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/beemgraphenebase/objecttypes.py'),
                      'object_type')]},
        loc('../beem/beemgraphenebase/operationids.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/beemgraphenebase/operationids.py'),
                      'operations')]},
        loc('../beem/beemgraphenebase/types.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../beem/beemgraphenebase/types.py'),
                      'Array')]},
        loc('../beem/docs/index.rst'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../beem/examples/benchmark_beem.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/examples/benchmark_beem.py'),
                      'avspeed')]},
        loc('../beem/examples/benchmark_nodes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/examples/benchmark_nodes.py'),
                      'avtran')]},
        loc('../beem/examples/compare_with_steem_python_account.py'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/examples/compare_with_steem_python_account.py'),
                      'beem_acc')]},
        loc('../beem/examples/op_on_testnet.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/examples/op_on_testnet.py'),
                      'account')]},
        loc('../beem/examples/print_appbase_calls.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/examples/print_appbase_calls.py'),
                      'all_calls')]},
        loc('../beem/examples/print_comments.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/examples/print_comments.py'),
                      'blockchain')]},
        loc('../beem/examples/print_votes.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/examples/print_votes.py'),
                      'blockchain')]},
        loc('../beem/examples/print_votes_notify.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/examples/print_votes_notify.py'),
                      'log')]},
        loc('../beem/examples/waitForRecharge.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/examples/waitForRecharge.py'),
                      'randowhale')]},
        loc('../beem/examples/watching_the_watchers.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../beem/examples/watching_the_watchers.py'),
                      'blockchain')]},
        loc('../beem/setup.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('generic attribute',
        loc('../beem/setup.py'),
        'ascii')]},
        loc('../beem/tox.ini'): {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': None},
        loc('x-wingide-zip://C:/Users/nahrstaedt/AppData/Roaming/Python/Python36/site-packages/beem-0.19.11-py3.6.egg//beemapi/steemnoderpc.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('x-wingide-zip://C:/Users/nahrstaedt/AppData/Roaming/Python/Python36/site-packages/beem-0.19.11-py3.6.egg//beemapi/steemnoderpc.py'),
                      'log')]},
        u'Nach Modul': {'expanded-nodes': [],
                        'selected-nodes': [],
                        'top-node': None}},
                                'browse_mode': u'By Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {}),
                              ('pylintpanel#02EFWRQK9X24',
                               'tall',
                               0,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          5],
        'notebook_display': 'normal',
        'notebook_percent': 0.5110851808634773,
        'override_title': None,
        'pagelist': [('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'Python Files',
                                  'fLocation': u'..\\beem\\beem',
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': True,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 40,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'STEEM_REVERSE_AUCTION_WINDOW_SECONDS_HF20',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u"'",
                                       'fReverse': False,
                                       'fSearchText': u'convert_text',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [loc('../beem/examples/op_on_testnet.py'),
                                       loc('../beem/tests/beembase/test_transactions.py'),
                                       loc('../beem/tests/test_block.py'),
                                       loc('../beem/tests/test_blockchain.py'),
                                       loc('../beem/tests/test_cli.py'),
                                       loc('../beem/tests/test_comment.py'),
                                       loc('../beem/tests/test_discussions.py'),
                                       loc('../beem/tests/test_market.py'),
                                       loc('../beem/tests/test_message.py'),
                                       loc('../beem/tests/test_notify.py'),
                                       loc('../beem/tests/test_price.py'),
                                       loc('../beem/tests/test_steem.py'),
                                       loc('../beem/tests/test_steemnoderpc.py'),
                                       loc('../beem/tests/test_testnet.py'),
                                       loc('../beem/tests/test_txbuffers.py'),
                                       loc('../beem/tests/test_utils.py'),
                                       loc('../beem/tests/test_vote.py'),
                                       loc('../beem/tests/test_wallet.py'),
                                       loc('../beem/tests/test_websocket.py'),
                                       loc('../beem/tests/test_witness.py'),
                                       loc('../beem/tests/beembase/__init__.py'),
                                       loc('../beem/tests/__init__.py'),
                                       loc('../beem/tests/beembase/test_memo.py'),
                                       loc('../beem/tests/beemgraphene/test_account.py'),
                                       loc('../beem/tests/beemgraphene/__init__.py'),
                                       loc('../beem/tests/beemgraphene/test_base58.py'),
                                       loc('../beem/tests/beemgraphene/test_bip38.py'),
                                       loc('../beem/tests/beemgraphene/test_ecdsa.py'),
                                       loc('../beem/tests/beemgraphene/test_py23.py'),
                                       loc('../beem/tests/beemgraphene/test_rpcutils.py'),
                                       loc('../beem/tests/test_account.py'),
                                       loc('../beem/tests/test_aes.py'),
                                       loc('../beem/tests/test_amount.py'),
                                       loc('../beem/tests/test_asset.py'),
                                       loc('../beem/tests/test_objectcache.py'),
                                       loc('../beem/tests/test_base_objects.py'),
                                       loc('../beem/pytest.ini')],
                       'filter': u'test_acc',
                       'recent-filters': None,
                       'sort-order': 'alpha',
                       'tree-state': {'expanded-nodes': [(1,),
        (1,
         0),
        (1,
         0,
         10)],
                                      'selected-nodes': [(1,
        0,
        10)],
                                      'top-node': (0,)}}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 0L,
                       'sel-line-start': 0L,
                       'selection_end': 0L,
                       'selection_start': 0L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      1,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2L,
                       'sel-line-start': 145L,
                       'selection_end': 145L,
                       'selection_start': 145L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('../hivedesktop/src/main/python/threads/pandoc.py'),
        {'attrib-starts': [('PandocThread|0|',
                            5),
                           ('PandocThread|0|.run|0|',
                            11)],
         'code-line': '        self.parent().pandoc.convert_text(self.parent'\
                      '().textEditor.textContent, self.pathname)\r\n',
         'first-line': 4L,
         'folded-linenos': [],
         'sel-line': 12L,
         'sel-line-start': 314L,
         'selection_end': 355L,
         'selection_start': 343L,
         'zoom': 0L},
        1586551078.95],
        [loc('../hivedesktop/src/main/python/pandoc.py'),
         {'attrib-starts': [],
          'code-line': '',
          'first-line': 84L,
          'folded-linenos': [],
          'sel-line': 122L,
          'sel-line-start': 4142L,
          'selection_end': 4142L,
          'selection_start': 4142L,
          'zoom': 0L},
         1586551081.808],
        [loc('../hivedesktop/src/main/python/pandoc.py'),
         {'attrib-starts': [('Pandoc|0|',
                             7),
                            ('Pandoc|0|.convert_text|0|',
                             100)],
          'code-line': '    def convert_text(self, text, outputfile = None):'\
                       '\r\n',
          'first-line': 92L,
          'folded-linenos': [],
          'sel-line': 100L,
          'sel-line-start': 3219L,
          'selection_end': 3239L,
          'selection_start': 3227L,
          'zoom': 0L},
         1586551114.465],
        [loc('../hivedesktop/src/main/python/main.py'),
         {'attrib-starts': [('MainWindow|0|',
                             83),
                            ('MainWindow|0|.closeEvent|0|',
                             199)],
          'code-line': '                    "The program will keep running i'\
                       'n the system tray. To "\r\n',
          'first-line': 194L,
          'folded-linenos': [],
          'sel-line': 202L,
          'sel-line-start': 8066L,
          'selection_end': 8129L,
          'selection_start': 8127L,
          'zoom': 0L},
         1586551120.563],
        [loc('../hivedesktop/src/main/python/threads/thread.py'),
         {'attrib-starts': [],
          'code-line': 'import helpers\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 4L,
          'sel-line-start': 96L,
          'selection_end': 103L,
          'selection_start': 103L,
          'zoom': 0L},
         1586551124.336],
        [loc('../hivedesktop/src/main/python/threads/pandoc.py'),
         {'attrib-starts': [('PandocThread|0|',
                             5),
                            ('PandocThread|0|.run|0|',
                             11)],
          'code-line': '        self.parent().pandoc.convert_text(self.paren'\
                       't().textEditor.textContent, self.pathname)\r\n',
          'first-line': 4L,
          'folded-linenos': [],
          'sel-line': 12L,
          'sel-line-start': 314L,
          'selection_end': 355L,
          'selection_start': 343L,
          'zoom': 0L},
         1586551127.513],
        [loc('../hivedesktop/src/main/python/threads/pandoc.py'),
         {'attrib-starts': [('PandocThread|0|',
                             5),
                            ('PandocThread|0|.run|0|',
                             11)],
          'code-line': '        self.parent().pandoc.convert_text(self.paren'\
                       't().post.body, self.pathname)\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 12L,
          'sel-line-start': 314L,
          'selection_end': 379L,
          'selection_start': 379L,
          'zoom': 0L},
         1586551158.286],
        [loc('../hivedesktop/src/main/python/main.py'),
         {'attrib-starts': [('MainWindow|0|',
                             83),
                            ('MainWindow|0|.__init__|0|',
                             84)],
          'code-line': '        self.post = {"body": "test"}\r\n',
          'first-line': 102L,
          'folded-linenos': [],
          'sel-line': 112L,
          'sel-line-start': 3965L,
          'selection_end': 3999L,
          'selection_start': 3999L,
          'zoom': 0L},
         1586551354.68],
        [loc('../hivedesktop/src/main/python/threads/thread.py'),
         {'attrib-starts': [],
          'code-line': 'import helpers\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 4L,
          'sel-line-start': 96L,
          'selection_end': 103L,
          'selection_start': 103L,
          'zoom': 0L},
         1586551355.777],
        [loc('../hivedesktop/src/main/python/threads/pandoc.py'),
         {'attrib-starts': [('PandocThread|0|',
                             5),
                            ('PandocThread|0|.run|0|',
                             11)],
          'code-line': '        self.parent().pandoc.convert_text(self.paren'\
                       't().post["body"], self.pathname)\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 12L,
          'sel-line-start': 314L,
          'selection_end': 382L,
          'selection_start': 382L,
          'zoom': 0L},
         1586551436.873],
        [loc('../hivedesktop/template/default.css'),
         {'attrib-starts': [],
          'code-line': '/*\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1586551437.881],
        [loc('../hivedesktop/template/default.html'),
         {'attrib-starts': [],
          'code-line': '<!DOCTYPE html>\r\n',
          'first-line': 38L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1586551450.313],
        [loc('../hivedesktop/src/main/python/main.py'),
         {'attrib-starts': [('MainWindow|0|',
                             83),
                            ('MainWindow|0|.__init__|0|',
                             84)],
          'code-line': '        self.post = {"body": "##test"}\r\n',
          'first-line': 102L,
          'folded-linenos': [],
          'sel-line': 112L,
          'sel-line-start': 3965L,
          'selection_end': 3997L,
          'selection_start': 3997L,
          'zoom': 0L},
         1586551560.161],
        [loc('../hivedesktop/src/main/python/pandoc.py'),
         {'attrib-starts': [('Pandoc|0|',
                             7),
                            ('Pandoc|0|.convert_text|0|',
                             100)],
          'code-line': '    def convert_text(self, text, outputfile = None):'\
                       '\r\n',
          'first-line': 19L,
          'folded-linenos': [],
          'sel-line': 100L,
          'sel-line-start': 3219L,
          'selection_end': 3239L,
          'selection_start': 3227L,
          'zoom': 0L},
         1586551569.109],
        [loc('../hivedesktop/src/main/python/threads/pandoc.py'),
         {'attrib-starts': [('PandocThread|0|',
                             5),
                            ('PandocThread|0|.__init__|0|',
                             6)],
          'code-line': '    def __init__(self, parent, pathname):\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 6L,
          'sel-line-start': 109L,
          'selection_end': 148L,
          'selection_start': 140L,
          'zoom': 0L},
         1586551602.336],
        [loc('../hivedesktop/src/main/python/main.py'),
         {'attrib-starts': [('MainWindow|0|',
                             83),
                            ('MainWindow|0|.__init__|0|',
                             84)],
          'code-line': '        self.triggeredPreview()\r\n',
          'first-line': 102L,
          'folded-linenos': [],
          'sel-line': 115L,
          'sel-line-start': 4093L,
          'selection_end': 4122L,
          'selection_start': 4106L,
          'zoom': 0L},
         1586551713.281],
        [loc('../hivedesktop/src/main/python/threads/thread.py'),
         {'attrib-starts': [],
          'code-line': 'import helpers\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 4L,
          'sel-line-start': 96L,
          'selection_end': 103L,
          'selection_start': 103L,
          'zoom': 0L},
         1586551717.167],
        [loc('../hivedesktop/src/main/python/threads/pandoc.py'),
         {'attrib-starts': [('PandocThread|0|',
                             5),
                            ('PandocThread|0|.run|0|',
                             11)],
          'code-line': '        self.parent().pandoc.convert_text(self.paren'\
                       't().post["body"], self.pathname)\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 12L,
          'sel-line-start': 314L,
          'selection_end': 342L,
          'selection_start': 336L,
          'zoom': 0L},
         1586551741.794],
        [loc('../hivedesktop/ui/mainwindow.ui'),
         {'attrib-starts': [],
          'code-line': '<?xml version="1.0" encoding="UTF-8"?>\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1586721217.78],
        [loc('../../../../../Program Files (x86)/Wing Pro 7.2/doc/TOC'),
         {'displayed-index': -1,
          'viewer-state': {'history': [-1,
                                       0],
                           'history-pos': 0,
                           'index': -1,
                           'top': 0,
                           'top-left-pos': 0}},
         1586721219.947]],
        20),
        'current-loc': loc('../../../../../Program Files (x86)/Wing Pro 7.2/doc/TOC'),
        'editor-state-list': [(loc('../../../../../Program Files (x86)/Wing Pro 7.2/doc/TOC'),
                               {'displayed-index': 0,
                                'viewer-state': {'history': [-1,
        0],
        'history-pos': 1,
        'index': 0,
        'top': 0,
        'top-left-pos': 0}})],
        'has-focus': False,
        'locked': False},
        [loc('../../../../../Program Files (x86)/Wing Pro 7.2/doc/TOC')]),
                               'open_files': [u'../../../../../Program Files (x86)/Wing Pro 7.2/doc/TOC']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.4154727793696275},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           3),
                          1586550941.361),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.4961067853170189},
                 'splits': 2,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1586721219.712),
                 'user_data': {}},
        'window-alloc': (24,
                         -1,
                         1900,
                         1028)}]}
testing.stored-results = (1,
                          [],
                          {})
